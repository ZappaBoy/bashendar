#!/usr/bin/env bash

################
### ZappaBoy ###
################

set -euo pipefail

SCRIPT_PATH="$( cd "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"
VERSION='1.0.0'
HOURS=1
ALL_EVENTS="ALL_EVENTS"
TOMORROW_EVENTS="TOMORROW_EVENTS"
DAILY_EVENTS="DAILY_EVENTS"
CALENDARS_DIR="${SCRIPT_PATH}/calendars"

usage() { cat << _EOF_
Usage: events [OPTION]
Show the events.
     -a,    print all the events (weekly)
     -d,    print events of the specified day (default current day)
     -h,    display this help and exit
     -v,    output version information and exit

Exit status:
     0      if OK,
     1      if minor problems (e.g., wrong specified day)

License:
    License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
    This is free software: you are free to change and redistribute it.
    There is NO WARRANTY, to the extent permitted by law.

_EOF_
1>&2; exit 1; }

show_daily_events(){
    local day

    case "${1}" in
        Mon)
            day=1
            ;;
        Tue)
            day=2
            ;;
        Wed)
            day=3
            ;;
        Thu)
            day=4
            ;;
        Fri)
            day=5
            ;;
        Sat)
            day=6
            ;;
        Sun)
            day=7
            ;;
        *)
            echo "Wrong specified day"
            exit 1
            ;;
    esac

    day=$((day + 1))
    daily_events=$(echo "${timetable}" | awk  -F '|' "{print \$${HOURS} \"\t\" \$${day}}")
    echo "${daily_events}"
}

show-tomorrow-events(){
    show_daily_events "$(date --date 'next day' +%a)"
}

show_all_events(){
    all_events=$(echo "${timetable}" | column -s "|" -L -t)
    echo "${all_events}"
}

read_timetable(){
    local timetable
    local calendar=$1
    local timetable_path="${CALENDARS_DIR}/$calendar.sh"
    [ ! -f "$timetable_path" ] && echo "Calendar not found." && exit 1
    timetable=$(bash "$timetable_path")
    echo "$timetable"
}

read_all_timetables(){
    local timetable
    local calendar
    local timetable_path
    local formatted_timetables=""

    for FILE in "${CALENDARS_DIR}"/* ; do
        timetable_path="$FILE"
        timetable=$(bash "$timetable_path")
        timetable_name=$(basename "$timetable_path")
        timetable_name="${timetable_name%%.*}"
        timetable_name="${timetable_name^}"
        formatted_timetables=$(echo -e "${formatted_timetables}""\n\n$timetable_name\n\n")
        formatted_timetables="${formatted_timetables}""${timetable}"
    done

    echo "$formatted_timetables"
}


MODE="NO_MODE"
day=""
timetable=""

while getopts "atdD:c:hv" o; do
    case "${o}" in
        a)
            echo "Show all events"
            MODE=$ALL_EVENTS
            ;;
        t)
            echo "Show tomorrow events"
            MODE=$TOMORROW_EVENTS
            ;;
        d)
            MODE=$DAILY_EVENTS
            ;;
        D)
            [[ -v $OPTARG ]] && day=${OPTARG:0:3}
            MODE=$DAILY_EVENTS
            ;;
        c)
            calendar=${OPTARG}
            echo "Show events of ${calendar}"
            timetable=$(read_timetable "${calendar}")
            ;;
        v)
            echo "Version: ${VERSION}"
            ;;
        h | *)
            usage
            ;;
    esac
done
shift $((OPTIND-1))

if [[ $day == "" ]]; then
    day="$(date +%a)"
fi

if [[ $timetable == "" ]]; then
    timetable=$(read_all_timetables)
fi

 case "${MODE}" in
        "$ALL_EVENTS")
            show_all_events
            ;;
        "$TOMORROW_EVENTS")
            show-tomorrow-events
            ;;
        "$DAILY_EVENTS")
            show_daily_events "$day"
            ;;
        *)
            usage
            ;;
    esac

exit 0
